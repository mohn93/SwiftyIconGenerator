- var need_charset = false;
- glyphs.forEach(function(g) { if (0xffff < g.code) { need_charset = true; } })
- if (need_charset)
  | @charset "UTF-8";
  != '\n'
  != '\n'
  | 

-  var unichr = function unichr(code) { if (code > 0xffff) { code -= 0x10000; surrogate1 = 0xd800 + (code >> 10); surrogate2 = 0xdc00 + (code & 0x3ff); return String.fromCharCode(surrogate1, surrogate2); } else { return String.fromCharCode(code); } }

- function pad(s) { return s.length === 3 ? '0' + s : s; }

- var i, g, css, hex, chr
- for (i in glyphs)
  - g = glyphs[i]
  - css = meta.css_use_suffix ? g.css + meta.css_prefix_text : meta.css_prefix_text + g.css
  - hex = '\\' + pad(g.code.toString(16))
  - chr = unichr(g.code)
  != '\n'
  - if (0xffff < g.code)
    | .#{css}:before { content: '#{chr}'; } /* '#{hex}' */
  - else
    | .#{css}:before { content: '#{hex}'; } /* '#{chr}' */
